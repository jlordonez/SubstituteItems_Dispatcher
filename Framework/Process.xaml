<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1052,3318</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="88">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="1062,3253" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_TimeOfDay" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, s:String[])" Name="dic_ScheduleRun" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="1000,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]" />
    <Assign DisplayName="Assign - TimeOfDay" sap:VirtualizedContainerService.HintSize="1000,61" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_TimeOfDay]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[now.ToString("HHH:mm")]</InArgument>
      </Assign.Value>
    </Assign>
    <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Description:&#xA;This switch is used to validate if the Time of Day when the Performer proces is excecuted or Triggered into the time window of 15 minutes." DisplayName="Switch - Schedule Runs to generate Queues" Expression="[If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(08,50,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(09,05,0),&#xD;&#xA;&#x9;&quot;A&quot;, &#xD;&#xA;&#x9;If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(11,50,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(12,5,0),&#xD;&#xA;&#x9;&#x9;&quot;B&quot;,&#xD;&#xA;&#x9;&#x9;If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(12,30,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(12,45,0),&#xD;&#xA;            &quot;C&quot;,&#xD;&#xA;           If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(13,0,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(13,15,0),&#xD;&#xA;                &quot;D&quot;,&#xD;&#xA;                If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(14,0,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(14,15,0),&#xD;&#xA;                    &quot;E&quot;,&#xD;&#xA;                    If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(17,10,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(17,25,0),&#xD;&#xA;                        &quot;F&quot;,&#xD;&#xA;                        If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(19,10,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(19,24,55),&#xD;&#xA;                            &quot;G&quot;,&#xD;&#xA;                            If(DateTime.Parse(str_TimeOfDay).TimeOfDay &gt;= New TimeSpan(19,25,0) And DateTime.Parse(str_TimeOfDay).TimeOfDay &lt;= New TimeSpan(19,40,0),&#xD;&#xA;                                &quot;H&quot;,&#xD;&#xA;                                &quot;NO VALID&quot;&#xD;&#xA;                            )&#xD;&#xA;                        )&#xD;&#xA;                    )&#xD;&#xA;                )            &#xD;&#xA;            )&#xD;&#xA;        )&#xD;&#xA;    )&#xD;&#xA;)]" sap:VirtualizedContainerService.HintSize="1000,783" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence x:Key="A" DisplayName="&quot;The Current Time is Between 08:50 To 09:05&quot;" sap:VirtualizedContainerService.HintSize="400,376" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;The Current Time is Between 08:50 To 09:05&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_34">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"51", "2", "48", "Z9", "84"}}, {"Facility", {"4"}}, {"Time", {"8-50"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="B" DisplayName="&quot;The Current Time is Between 11:50 To 12:00&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;The Current Time is Between 11:50 To 12:00&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_35">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"51", "2", "48", "Z9", "84"}}, {"Facility", {"2", "3"}}, {"Time", {"11-50"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="C" DisplayName="&quot;The Current Time is Between 12:30 To 12:45&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;The Current Time is Between 12:30 To 12:45&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_36">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"98", "90"}}, {"Facility", {"2"}}, {"Time", {"12-30"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="D" DisplayName="&quot;The Current Time is Between 13:00 To 13:15&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;The Current Time is Between 13:00 To 13:15&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_37">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"79", "24", "39", "93", "87", "22"}}, {"Facility", {"2"}}, {"Time", {"13-00"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="E" DisplayName="&quot;The Current Time is Between 14:00 To 14:15&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;The Current Time is Between 14:00 To 14:15&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_38">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"79", "24", "39", "93", "87", "22"}}, {"Facility", {"3"}}, {"Time", {"14-00"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="F" DisplayName="&quot;The Current Time is Between 17:10 To 17:25&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;The Current Time is Between 17:10 To 17:25&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_39">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"97"}}, {"Facility", {"3"}}, {"Time", {"17-10"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="G" DisplayName="&quot;The Current Time is Between 19:10 To 19:24&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;The Current Time is Between 19:10 To 19:24&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_40">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"97"}}, {"Facility", {"2"}}, {"Time", {"19-10"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="H" DisplayName="&quot;The Current Time is Between 19:25 To 19:35&quot;" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;The Current Time is Between 19:25 To 19:35&quot;]" />
        <Assign sap2010:Annotation.AnnotationText="Description:&#xA;Substitute Items should be excecuted during the day depending on the Buyer code and Facility." DisplayName="Assign - Scheduled Run Depending on Buyer code and Facility" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Assign_41">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[dic_ScheduleRun]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[new Dictionary(Of String, String()) From{{"Buyers", {"82", "94", "98", "Z8", "14", "23"}}, {"Facility", {"2"}}, {"Time", {"19-20"}}}]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <Sequence x:Key="NO VALID" sap:VirtualizedContainerService.HintSize="400,335" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;The Current Time (&quot; + str_TimeOfDay + &quot;) is Out of Scope from the Schedule Runs&quot;]" />
        <Throw DisplayName="Throw SE" Exception="[new Exception(&quot;The Current Time (&quot; + str_TimeOfDay + &quot;) is Out of Scope from the Scheduled Runs&quot;)]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </Sequence>
    </Switch>
    <Sequence DisplayName="Validate if Buyers and Facility are allowed (Start Run) to be processed" sap:VirtualizedContainerService.HintSize="1000,2014" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="bool_StatusBuyersFacility" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign -  Initialize bool_StatusBuyersFacility" sap:VirtualizedContainerService.HintSize="674,61" sap2010:WorkflowViewState.IdRef="Assign_42">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[bool_StatusBuyersFacility]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="674,985" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dic_ScheduleRun(&quot;Buyers&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="Buyer" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="638,860" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="576,749" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dic_ScheduleRun(&quot;Facility&quot;)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="Facility" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,624" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[if(in_TransactionItem(&quot;Buyer&quot;).ToString.Trim.Equals(Buyer.ToString.Trim) AndAlso Cint(in_TransactionItem(&quot;Facility&quot;).ToString).ToString.Trim.Equals(Facility.ToString.Trim), True, False)]" DisplayName="If - Validate if Transaction Item (Buyers and Facility) are allowed to be processed" sap:VirtualizedContainerService.HintSize="478,513" sap2010:WorkflowViewState.IdRef="If_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,237" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign -  Initialize bool_StatusBuyersFacility" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_43">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[bool_StatusBuyersFacility]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Break sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <If sap2010:Annotation.AnnotationText="Description:&#xA;Validate if Buyers and Facility into the Stat Run are allowed to be processed" Condition="[bool_StatusBuyersFacility]" DisplayName="If - Validate bool_StatusBuyersFacility" sap:VirtualizedContainerService.HintSize="674,777" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,356" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_ScheduleRun" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;UiPathBot: The Buyer &quot; + in_TransactionItem(&quot;Buyer&quot;).ToString + &quot; And Facility &quot; + in_TransactionItem(&quot;Facility&quot;).ToString.Trim + &quot; are Allowed to be processed&quot;]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="QueueItems\Add Queueitem.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="QueueItems\Add Queueitem.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_ScheduleRun">[dic_ScheduleRun("Time")(0).ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;UiPathBot: The Buyer &quot; + in_TransactionItem(&quot;Buyer&quot;).ToString + &quot; And Facility &quot; + in_TransactionItem(&quot;Facility&quot;).ToString.Trim + &quot; are NOT Allowed to be processed at &quot; + dic_ScheduleRun(&quot;Time&quot;)(0)]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>